
plugins {
    // Scala
    // Apply the java plugin to add support for Java
    id 'scala'
    id "org.odfi.ooxoo" version "3.4.3-SNAPSHOT"
    id 'org.openjfx.javafxplugin' version '0.0.9'
    //id 'org.anarres.jnaerator' version '1.0.0'


    // Publish
    id 'maven-publish'
    id "java-library"

}


group = 'org.odfi.instruments'
version = gradle.ext.has("version") ?  gradle.ext.version :  "dev"



// Sources
//-------------------
/*jnaerator {
	libraryName 'visa'
	packageName 'org.odfi.instruments.nivisa'
	headerFiles [
"src/main/jnaerator/fixes.h",
"src/main/jnaerator/external/visa.h",
"src/main/jnaerator/external/visatype.h",
"src/main/jnaerator/external/vpptype.h"
    ]
	// runtimeMode "JNAerator"
	// define "FOO=bar", "ANSWER=42"
	// extraArgs "-v", "-foo", "-bar"
}*/

sourceSets {
    main {
        scala {
            // Generated from ooxoo
            srcDir new java.io.File(getBuildDir(), "generated-sources/scala")
        }
        java {
            srcDir new java.io.File("target/generated-sources/java")
        }
    }

}

// Dependencies
//-------------------
java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(11))
    }
}

javafx {
    version = "17-ea+3"
    modules = ['javafx.controls', 'javafx.fxml', 'javafx.graphics' , 'javafx.media','javafx.web']
}

def indesign_version = "1.3.3-SNAPSHOT"
def scala_major = "2.13"
def scala_version = gradle.ext.has("scala_version") ? gradle.ext.scala_version :  "$scala_major.5"
dependencies {



    // Dependencies
    //-------------------
    api "org.apache.commons:commons-compress:1.20"
    api "com.nativelibs4java:bridj:0.7.0"
    api "org.jfree:jfreechart:1.5.3"
    api "org.jfree:jfreesvg:3.4"
    api "org.jfree:jcommon:1.0.24"
    api "org.scream3r:jssc:2.8.0"
    api "dk.thibaut:jserial:1.0.3"
    api "net.java.dev.jna:jna:4.2.0"
    api "org.apache.poi:poi:5.0.0"
    api "org.apache.poi:poi-ooxml:5.0.0"
    api "org.apache.jackrabbit:jackrabbit-webdav:2.21.5"

    compile "org.scala-lang.modules:scala-parallel-collections_2.13:1.0.1"
    compile "org.odfi.indesign:indesign-stdplatform:$indesign_version"


    api("org.scala-lang:scala-library:$scala_version")
    testImplementation "org.scala-lang.modules:scala-xml_$scala_major:2.0.0-M3"
    testImplementation "org.scalatest:scalatest-funsuite_$scala_major:3.2.6"
    testImplementation "org.scalatest:scalatest-shouldmatchers_$scala_major:3.2.6"
}


publishing {

    publications {

        publishToMavenLocal(MavenPublication) {

            artifactId "instruments-core"
            from components.java

            pom {
                name = 'Instruments Interfaces'
                description = 'Interfaces to take measurements from instruments'

                //properties = [ ]
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'richnou'
                        name = 'Richnou'
                        email = 'leys.richard@gmail.com'
                    }
                }

            }
        }

    }
    repositories {
        maven {

            // change URLs to point to your repos, e.g. http://my.org/repo
            def releasesRepoUrl = "https://www.opendesignflow.org/maven/repository/internal/"
            def snapshotsRepoUrl = "https://www.opendesignflow.org/maven/repository/snapshots"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl

            // Credentials
            //-------------
            def mavenOdfiPropertiesFile = new File(System.getProperty("user.home") + File.separator + ".gradle/odfi-maven.properties").getCanonicalFile()

            if (mavenOdfiPropertiesFile.exists()) {
                def keystoreProperties = new Properties()
                keystoreProperties.load(new FileInputStream(mavenOdfiPropertiesFile))

                credentials {
                    username keystoreProperties["user"]
                    password keystoreProperties["password"]
                }
            } else {
                credentials {
                    username System.getenv("PUBLISH_USERNAME")
                    password System.getenv("PUBLISH_PASSWORD")
                }
            }
        }
    }
}

repositories {

    mavenLocal()
    mavenCentral()
    maven {
        name = 'Sonatype Nexus Snapshots'
        url = 'https://oss.sonatype.org/content/repositories/snapshots/'
    }
    maven {
        name = 'ODFI Releases'
        url = 'https://www.opendesignflow.org/maven/repository/internal/'
    }
    maven {
        name = 'ODFI Snapshots'
        url = 'https://www.opendesignflow.org/maven/repository/snapshots/'
    }
    maven {
        url "https://repo.triplequote.com/libs-release/"
    }
    google()
    jcenter()
}



